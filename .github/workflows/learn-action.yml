# Your workflow name.
name: Deploy to heroku and netlify

# Run workflow on every push to master branch.
on:
  push:
    branches: [main]
    paths:
      - "packages/server/**"
      - "packages/shared/**"
      - "packages/client/**"
      - "./Dockerfile"
      - ".github/**"
  workflow_dispatch:
    branches: [main]

# Your workflows jobs.
jobs:
  build_server_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository.
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Heroku
        run: |
          echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=${{ secrets.HEROKU_EMAIL }} registry.heroku.com --password-stdin

      - name: Build container
        run: |
          /usr/bin/docker buildx build --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache-new --iidfile /tmp/docker-build-push-3ltn7s/iidfile --tag registry.heroku.com/${{secrets.HEROKU_APP_NAME}}/web:latest --metadata-file /tmp/docker-build-push-3ltn7s/metadata-file --push .

      - name: Release container
        run: docker image ls -a

      # - name: list local containers
      #   run: docker image ls

      #
      - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
        uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          dockerfile_directory: ./
          dockerfile_name: Dockerfile
          docker_options: "--cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache-new"
          process_type: web

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build_server_and_deploy]
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install PNPM
  #       run: npm i -g pnpm

  #     - name: Install dependencies
  #       run: pnpm install
  #       working-directory: ./packages/client

  #     - name: Build client app
  #       run: pnpm build
  #       working-directory: ./packages/client
  #     #  your build commands
  #     # - run: |
  #     #    ng build --prod
  #     - uses: amondnet/vercel-action@v20 #deploy
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
  #         vercel-args: "--prod" #Optional
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required
