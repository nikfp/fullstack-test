# Your workflow name.
name: Deploy to heroku and netlify

# Run workflow on every push to master branch.
on:
  push:
    branches: [main]
    # paths:
    #   - "packages/server/**"
    #   - "packages/shared/**"
    #   - "packages/client/**"
    #   - "./Dockerfile"
    #   - "./.github/**"
  workflow_dispatch:
    branches: [main]

# Your workflows jobs.
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository.
      - name: Checkout
        uses: actions/checkout@v2

      ### ⬇ IMPORTANT PART ⬇ ###

      - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
        uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
        with:
          # Below you must provide variables for your Heroku app.

          # The email address associated with your Heroku account.
          # If you don't want to use repository secrets (which is recommended) you can do:
          # email: my.email@example.com
          email: ${{ secrets.HEROKU_EMAIL }}

          # Heroku API key associated with provided user's email.
          # Api Key is available under your Heroku account settings.
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

          # Name of the heroku application to which the build is to be sent.
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

          # (Optional, default: "./")
          # Dockerfile directory.
          # For example, if you have a Dockerfile in the root of your project, leave it as follows:
          dockerfile_directory: ./

          # (Optional, default: "Dockerfile")
          # Dockerfile name.
          dockerfile_name: Dockerfile

          # (Optional, default: "")
          # Additional options of docker build command.
          docker_options: "--no-cache"

          # (Optional, default: "web")
          # Select the process type for which you want the docker container to be uploaded.
          # By default, this argument is set to "web".
          # For more information look at https://devcenter.heroku.com/articles/process-model
          process_type: web
  #
  ### ⬆ IMPORTANT PART ⬆ ###
  publishToNetlify:
    name: Publish To Netlify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install PNPM
        run: npm i -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build shared library
        run: pnpm build
        working-directory: ./packages/shared

      - name: Install shared project to client
        run: pnpm install
        working-directory: ./packages/client

      - name: Install netlify CLI
        run: pnpm add -D netlify-cli
        working-directory: ./packages/client

      - name: Build client library
        run: pnpm exec netlify build --offline
        working-directory: ./packages/client

      - name: confirm directories
        run: ls -al
        working-directory: ./packages/client

      - name: deploy site to Netlify
        run: pnpm exec netlify deploy --id ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }}
        working-directory: ./packages/client

      # - name: Deploy production to Netlify
      #   uses: nwtgck/actions-netlify@v1.2
      #   with:
      #     publish-dir: "./packages/client/build"
      #     production-deploy: true
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
